#sites: [stampede]
#sites: [cpu-dev]
sites: [mesca2, cpu_dev, cpu, cpu_scal, cpu_long]

# Instructions for Stampede
# 1. If you are running on the midway login nodes set jobManager: "local:slurm"
# 2. Set workDirectory to /tmp/your_username_on_stampede

site.cpu_dev {
    execution {
        type      : "coaster"                         # Use coasters to run on remote sites
        jobManager: "local:slurm"                    # Use ssh-cl to connect, slurm is the Local resource manager
        options {
            maxJobs         : 1                     # Max jobs submitted to LRM
            nodeGranularity : 1                      # Integer multiple of this will be requested per job
            maxNodesPerJob  : 20                       # Nodes per job
            tasksPerNode    : 24                      # Tasks per Node
            jobQueue        : "cpu_dev"           # Select queue from (development, normal, large)
            maxJobTime      : "02:00:00"              # Time requested per job
	    userHomeOverride : ${env.SCRATCH}"/swiftwork"
        }
    }
    staging             : "shared-fs"                     # Stage files from "local" system to Midway
    workDirectory       : ${env.SCRATCH}"/swiftwork" # Location for intermediate files
    maxParallelTasks    : 480                         # Maximum number of parallel tasks
    initialParallelTasks: 480                         # Maximum number of tasks at start
    app.ALL { executable: "*" }                       # All tasks to be found from commandline
}

site.cpu {
    execution {
	type      : "coaster"                        # Use coasters to run on remote sites
        jobManager: "local:slurm"                    # Use ssh-cl to connect, slurm is the Local resource manager
        options {
            maxJobs         : 24                      # Max jobs submitted to LRM
            nodeGranularity : 2                     # Nodes per job
            maxNodesPerJob  : 50                      # Nodes per job
            tasksPerNode    : 24                      # Tasks per Node
            jobQueue        : "cpu"                   # Select queue from (development, normal, large)
            maxJobTime      : "48:00:00"              # Time requested per job
            userHomeOverride : ${env.SCRATCH}"/swiftwork"
        }
    }
    staging             : "shared-fs" #"local"                     # Stage files from "local" system to Midway
    workDirectory       : ${env.SCRATCH}"/swiftwork" # Location for intermediate files
    maxParallelTasks    : 1200                         # Maximum number of parallel tasks
    initialParallelTasks: 1200                         # Maximum number of tasks at start
    app.ALL { executable: "*" }                  # All tasks to be found from commandline
}

site.treinamento {
    execution {
        type      : "coaster"                        # Use coasters to run on remote sites
        jobManager: "local:slurm"                    # Use ssh-cl to connect, slurm is the Local resource manager
        options {
            maxJobs         : 1                      # Max jobs submitted to LRM
            nodeGranularity : 1                     # Nodes per job
            maxNodesPerJob  : 2                      # Nodes per job
            tasksPerNode    : 24                      # Tasks per Node
            jobQueue        : "cpu"                   # Select queue from (development, normal, large)
            maxJobTime      : "00:05:00"              # Time requested per job
            userHomeOverride : ${env.SCRATCH}"/swiftwork"
        }
    }
    staging             : "shared-fs" #"local"                     # Stage files from "local" system to Midway
    workDirectory       : ${env.SCRATCH}"/swiftwork" # Location for intermediate files
    maxParallelTasks    : 48                         # Maximum number of parallel tasks
    initialParallelTasks: 48                         # Maximum number of tasks at start
    app.ALL { executable: "*" }                      # All tasks to be found from commandline
}

site.mesca2 {
    execution {
        type      : "coaster"                        # Use coasters to run on remote sites
        jobManager: "local:slurm"                    # Use ssh-cl to connect, slurm is the Local resource manager
        options {
            maxJobs         : 6                      # Max jobs submitted to LRM
            nodeGranularity : 1                     # Nodes per job
            maxNodesPerJob  : 1                      # Nodes per job
            tasksPerNode    : 240                     # Tasks per Node
            jobQueue        : "mesca2"                   # Select queue from (development, normal, large)
            maxJobTime      : "48:00:00"              # Time requested per job
            userHomeOverride : ${env.SCRATCH}"/swiftwork"
        }
    }
    staging             : "shared-fs"                     # Stage files from "local" system to Midway
    workDirectory       : ${env.SCRATCH}"/swiftwork" # Location for intermediate files
    maxParallelTasks    : 240                         # Maximum number of parallel tasks
    initialParallelTasks: 240                       # Maximum number of tasks at start
    app.ALL { executable: "*" }                  # All tasks to be found from commandline
}

site.cpu_scal {
    execution {
        type      : "coaster"                        # Use coasters to run on remote sites
        jobManager: "local:slurm"                    # Use ssh-cl to connect, slurm is the Local resource manager
        options {
            maxJobs         : 8                      # Max jobs submitted to LRM
            nodeGranularity : 1                     # Nodes per job
            maxNodesPerJob  : 128                      # Nodes per job
            tasksPerNode    : 24                     # Tasks per Node
            jobQueue        : "cpu_scal"                   # Select queue from (development, normal, large)
            maxJobTime      : "18:00:00"              # Time requested per job
            userHomeOverride : ${env.SCRATCH}"/swiftwork"
        }
    }
    staging             : "shared-fs"                     # Stage files from "local" system to Midway
    workDirectory       : ${env.SCRATCH}"/swiftwork" # Location for intermediate files
    maxParallelTasks    : 3072                         # Maximum number of parallel tasks
    initialParallelTasks: 3072                       # Maximum number of tasks at start
    app.ALL { executable: "*" }                  # All tasks to be found from commandline
}

site.cpu_long {
    execution {
        type      : "coaster"                        # Use coasters to run on remote sites
        jobManager: "local:slurm"                    # Use ssh-cl to connect, slurm is the Local resource manager
        options {
            maxJobs         : 1                      # Max jobs submitted to LRM
            nodeGranularity : 1                     # Nodes per job
            maxNodesPerJob  : 10                      # Nodes per job
            tasksPerNode    : 24                     # Tasks per Node
            jobQueue        : "cpu_long"                   # Select queue from (development, normal, large)
            maxJobTime      : "744:00:00"              # Time requested per job
            userHomeOverride : ${env.SCRATCH}"/swiftwork"
        }
    }
    staging             : "shared-fs"                     # Stage files from "local" system to Midway
    workDirectory       : ${env.SCRATCH}"/swiftwork" # Location for intermediate files
    maxParallelTasks    : 240                         # Maximum number of parallel tasks
    initialParallelTasks: 240                       # Maximum number of tasks at start
    app.ALL { executable: "*" }                  # All tasks to be found from commandline
}


TCPPortRange: "50000,51000"                           # TCP port range used by swift to communicate with remote sites
lazyErrors: false                                     # Swift fails immediately upon encountering an error
executionRetries: 2                                   # Set number of retries upon task failures
keepSiteDir: true                                     # Keep Site Dir (useful for debug)
#providerStagingPinSwiftFiles: false                   # Pin staging files (useful for debug)
alwaysTransferWrapperLog: true                        # Transfer wrapper logs (useful for debug)
