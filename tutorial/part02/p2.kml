// CACHE ID 9f6c1ed4-f975-4fb5-9fcf-7994f9fda617-no-provenance
import(sys)
import(scheduler)
import(swift)
importStdlib(1)

types(
	xs:schema(
    			xs:simpleType("file", xs:restriction("string"))
    )
)
swift.field.f.file := swift:field("f", "file")
swift.field.const.float := swift:field("const", "float")
swift.field.const.int := swift:field("const", "int")
swift.field.temp.int := swift:field("temp", "int")
swift.field.const.string := swift:field("const", "string")
swift.field.const.boolean := swift:field("const", "boolean")
swift.field.swift.mapper.17000.string := swift:field("swift.mapper.17000", "string")
swift.string.17002 := swift:new(swift.field.const.string, value=".out")
swift.string.17001 := swift:new(swift.field.const.string, value="output/sim_")
swift.int.0 := swift:new(swift.field.const.int, value=0)
swift.int.9 := swift:new(swift.field.const.int, value=9)

simulation := function(o) {
	swift:unitStart("PROCEDURE", name="simulation", line=3, outputs="o")
	k:tailcall(
	  swift:execute(
		"simulate"
		swift:stageOut(o)

		swift:arguments(
		)

		stdout = swiftscript:filename(#_line=5
			o
		)

	  )
	)
	swift:unitEnd("PROCEDURE", name="simulation", line=3)}

restartLog(name = k:concat(contextAttribute("SWIFT:SCRIPT_NAME"), "-", contextAttribute("SWIFT:RUN_ID"))) {
	swift:mains(
		swift:startProgressTicker()
		swift:tParallelFor(#_line=8, _vvar="i",
			getArrayIterator(swift:range(swift.int.0, swift.int.9))) {

			swift:unitStart("FOREACH_IT", line=8) 
			swift.mapper.17000 := 
						swift:new(swift.field.swift.mapper.17000.string)
			f := 
					swift:new(swift.field.f.file, _defline=9
						swift:mapping("single_file_mapper", swift:parameter("file", swift.mapper.17000))
					)
			uparallel(
				swift:setFieldValue(
					k:getAndDelete(swift.mapper.17000)
					swiftscript:strcat(#_line=9
						swift.string.17001, i, swift.string.17002
					)
				)
				simulation(#_line=10
					k:getAndDelete(f)
				)
			)
			swift:cleanDataset(f)
			swift:unitEnd("FOREACH_IT", line=8)
		}
		swift:stopProgressTicker()
	)
}

swift:cleanDataset(shutdown=true)